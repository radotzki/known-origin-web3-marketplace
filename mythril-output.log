==== Integer Overflow ====
Type: Warning
Contract: RBAC
Function name: checkRole(address,string)
PC address: 147
A possible integer overflow exists in the function `checkRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:147

function checkRole(address _operator, string _role)
    public
    view
  {
    roles[_role].check(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: Whitelist
Function name: checkRole(address,string)
PC address: 246
A possible integer overflow exists in the function `checkRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:147

function checkRole(address _operator, string _role)
    public
    view
  {
    roles[_role].check(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: RBAC
Function name: hasRole(address,string)
PC address: 284
A possible integer overflow exists in the function `hasRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:160

function hasRole(address _operator, string _role)
    public
    view
    returns (bool)
  {
    return roles[_role].has(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: Whitelist
Function name: hasRole(address,string)
PC address: 527
A possible integer overflow exists in the function `hasRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:160

function hasRole(address _operator, string _role)
    public
    view
    returns (bool)
  {
    return roles[_role].has(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: Whitelist
Function name: removeAddressesFromWhitelist(address[])
PC address: 656
A possible integer overflow exists in the function `removeAddressesFromWhitelist(address[])`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:302

function removeAddressesFromWhitelist(address[] _operators)
    public
    onlyOwner
  {
    for (uint256 i = 0; i < _operators.length; i++) {
      removeAddressFromWhitelist(_operators[i]);
    }
  }

--------------------

==== Transaction order dependence ====
Type: Warning
Contract: HasNoEther
Function name: reclaimEther()
PC address: 803
A possible transaction order independence vulnerability exists in function reclaimEther(). The value or direction of the call statement is determined from a tainted storage location
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:348

owner.transfer(address(this).balance)

--------------------

==== Integer Overflow ====
Type: Warning
Contract: Whitelist
Function name: addAddressesToWhitelist(address[])
PC address: 1093
A possible integer overflow exists in the function `addAddressesToWhitelist(address[])`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:274

function addAddressesToWhitelist(address[] _operators)
    public
    onlyOwner
  {
    for (uint256 i = 0; i < _operators.length; i++) {
      addAddressToWhitelist(_operators[i]);
    }
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: KnownOriginDigitalAssetV2
Function name: checkRole(address,string)
PC address: 1524
A possible integer overflow exists in the function `checkRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:147

function checkRole(address _operator, string _role)
    public
    view
  {
    roles[_role].check(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: KnownOriginDigitalAssetV2
Function name: hasRole(address,string)
PC address: 2154
A possible integer overflow exists in the function `hasRole(address,string)`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:160

function hasRole(address _operator, string _role)
    public
    view
    returns (bool)
  {
    return roles[_role].has(_operator);
  }

--------------------

==== Integer Overflow ====
Type: Warning
Contract: KnownOriginDigitalAssetV2
Function name: removeAddressesFromWhitelist(address[])
PC address: 2451
A possible integer overflow exists in the function `removeAddressesFromWhitelist(address[])`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /tmp/FLAT-KnownOriginDigitalAssetV2.sol:302

function removeAddressesFromWhitelist(address[] _operators)
    public
    onlyOwner
  {
    for (uint256 i = 0; i < _operators.length; i++) {
      removeAddressFromWhitelist(_operators[i]);
    }
  }

--------------------


